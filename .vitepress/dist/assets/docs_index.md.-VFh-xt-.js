import{_ as e,c as a,o as t,a4 as i}from"./chunks/framework.Caa1YTU6.js";const k=JSON.parse('{"title":"Anomaly Packer","description":"","frontmatter":{"title":"Anomaly Packer"},"headers":[],"relativePath":"docs/index.md","filePath":"docs/index.md"}'),s={name:"docs/index.md"},o=i('<h1 id="the-purpose" tabindex="-1">The purpose <a class="header-anchor" href="#the-purpose" aria-label="Permalink to &quot;The purpose&quot;">​</a></h1><p>Anomaly Packer is an <a href="https://www.npmjs.com/package/anomaly-packer" target="_blank" rel="noreferrer">NPM package</a> that was designed to be used with TypeScript to help modders who know TypeScript to feel more confident with their code and simplify the creation of game files with a set of utility functions.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>TypeScript is a type-safe language and a linter for JavaScript. If you do not know TypeScript yet you are still interested in learning Anomaly Packer, you may be getting with <a href="https://www.w3schools.com/typescript/typescript_simple_types.php" target="_blank" rel="noreferrer">the basics of TypeScript</a> along the way.</p></div><h2 id="terminal-commands" tabindex="-1">Terminal Commands <a class="header-anchor" href="#terminal-commands" aria-label="Permalink to &quot;Terminal Commands&quot;">​</a></h2><p>Anomaly Packer provides some important terminal commands, like one for copying type declaration files into your project. More about terminal commands <a href="./usage/scripts.html#terminal-commands">here</a>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes nord github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#88C0D0;--shiki-light:#6F42C1;">bun</span><span style="--shiki-dark:#A3BE8C;--shiki-light:#032F62;"> run</span><span style="--shiki-dark:#A3BE8C;--shiki-light:#032F62;"> anomaly-packer</span><span style="--shiki-dark:#A3BE8C;--shiki-light:#032F62;"> add</span><span style="--shiki-dark:#A3BE8C;--shiki-light:#032F62;"> game</span><span style="--shiki-dark:#A3BE8C;--shiki-light:#032F62;"> src/types</span></span></code></pre></div><h2 id="packing" tabindex="-1">Packing <a class="header-anchor" href="#packing" aria-label="Permalink to &quot;Packing&quot;">​</a></h2><p>Anomaly Packer provides a <code>pack</code> function that handles transpilation of TypeScript files and creates a build directory with the name of your choosing.</p><p>Read about packing in detail <a href="./usage/packing.html">here</a>.</p><h2 id="utility-functions" tabindex="-1">Utility functions <a class="header-anchor" href="#utility-functions" aria-label="Permalink to &quot;Utility functions&quot;">​</a></h2><p>Functions like <code>ltx</code> and <code>dialog</code> make it easy and safe to create configs. The majority of utulity functions provide a type-safe way to generate texts. You can read more about text generation <a href="./usage/text.html">here</a>.</p>',11),n=[o];function r(c,l,p,d,h,m){return t(),a("div",null,n)}const y=e(s,[["render",r]]);export{k as __pageData,y as default};
